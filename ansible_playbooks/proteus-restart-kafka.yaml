---
  ###### STOP PROTEUS_PRODUCER -> slave02 ######
- hosts: treelogic:&slave02
  remote_user: root
  tasks:
    - name: get running proteus_producer task
      shell: "jps | grep Launcher | awk '{print $1}'"
      register: proteus_producer
    - debug:
        var: proteus_producer.stdout_lines

    - name: kill proteus_producer
      shell: "kill -9 {{ item }}"
      with_items: "{{proteus_producer.stdout_lines}}"

  ###### STOP KAFKA_MANAGER -> slave01 ######
- hosts: treelogic:&slave01
  remote_user: root
  tasks:
    - name: obtain the running pid of kafka manager
      shell: "cat RUNNING_PID"
      args:
        chdir: /home/proteususer/kafka-manager-1.3.3.7
      register: kafka_manager_pid
      ignore_errors: yes

    - debug:
        var: kafka_manager_pid.stdout_lines

    - name: kill kafka manager process
      shell: "kill -9 {{ item }}"
      with_items: "{{kafka_manager_pid.stdout_lines}}"

    - name: buscar el fichero RUNNING_PID
      stat: path=/home/proteususer/kafka-manager-1.3.3.7/RUNNING_PID
      register: running_pid_file

    - name: delete RUNNING_PID file
      file:
        path: "{{ running_pid_file }}"
        state: absent

  ###### RECREATE TOPICS -> master or slaves ######
- hosts: treelogic:&master
  remote_user: root
  tasks:
    - name: check topics
      shell: "/usr/hdp/2.5.3.0-37/kafka/bin/kafka-topics.sh --zookeeper localhost:2181 --list"
      register: kafka_topic_list

    - name: list topics before deletion
      debug:
        var: item
      with_items: kafka_topic_list.stdout_lines

    - name: obtener lista de topics
      command: cat /home/proteususer/proteus_topics.txt
      register: proteus_topics

    - name: listar el fichero de topics
      debug:
        var: "{{ item }}"
      with_items: proteus_topics.stdout_lines

    - name: delete topics
      shell: "/usr/hdp/2.5.3.0-37/kafka/bin/kafka-topics.sh --zookeeper localhost:2181 --delete --topic {{item}}"
      with_items: "{{ proteus_topics.stdout_lines }}"
      ignore_errors: yes

    - name: check topics
      shell: "/usr/hdp/2.5.3.0-37/kafka/bin/kafka-topics.sh --zookeeper localhost:2181 --list"
      register: kafka_topic_list

    - name: list topics before create and after delete
      debug:
        var: item
      with_items: kafka_topic_list.stdout_lines

    - name: create Kafka topics
      shell: "/usr/hdp/2.5.3.0-37/kafka/bin/kafka-topics.sh --zookeeper localhost:2181 --create --replication-factor 2 --partitions 5 --topic {{item}}"
      with_items: "{{ proteus_topics.stdout_lines }}"

    - name: check topics
      shell: "/usr/hdp/2.5.3.0-37/kafka/bin/kafka-topics.sh --zookeeper localhost:2181 --list"
      register: kafka_topic_list

    - name: list topics after create
      debug:
        var: "{{ item }}"
      with_items: kafka_topic_list.stdout_lines

##### RESTART KAFKA_MANAGER #####
- hosts: treelogic:&slave01
  remote_user: root
  tasks:
    - name: start the kafka-manager
      shell: "nohup ./bin/kafka-manager -Dhttp.port=8099 > /datos/proteus/kafka-manager.logs &"
      args:
        chdir: /home/proteususer/kafka-manager-1.3.3.7

##### RESTART PROTEUS_PRODUCER #####
- hosts: treelogic:&slave02
  remote_user: root
  tasks:
    - name: start the proteus_producer
      shell: "nohup mvn exec:java > /datos/proteus/proteus-producer-logs/producer-log.out &"
      args:
        chdir: /home/proteususer/proteus-producer
